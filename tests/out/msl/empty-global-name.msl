// language: metal2.0
#include <metal_stdlib>
#include <simd/simd.h>

using metal::uint;

struct type_1 {
    int member;
};

template <typename T> inline T naga_isign(T arg) {
    return metal::select(metal::select(T(-1), T(1), (arg > 0)), 0, (arg == 0));
}

void function(
    device type_1& unnamed
) {
    int _e4 = unnamed.member;
    unnamed.member = _e4 + 1;
    return;
}

kernel void main_(
  device type_1& unnamed [[user(fake0)]]
) {
    function(unnamed);
}
